heat_template_version: 2016-04-08

description: >
  Contrail WebUI service deployment using puppet, this YAML file
  creates the interface between the HOT template
  and the puppet manifest that actually installs
  and configures Contrail WebUI.

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ContrailWebUiAnalyticsVip:
    description: Contrail Analytics VIP
    type: string
  ContrailWebUiConfigVip:
    description: Contrail Config VIP
    type: string
  ContrailWebUiNeutronVip:
    description: Neutron VIP
    type: string
  ContrailWebuiHttpPort:
    default: 8080
    description: HTTP Port of Webui
    type: number
  ContrailWebuiHttpsPort:
    default: 8143
    description: HTTPS Port of Webui
    type: number
  ContrailWebUiRedisIp:
    description: Redis IP
    type: string
    default: '127.0.0.1'

resources:
  ContrailBase:
    type: ./contrail-base.yaml
    properties:
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}

outputs:
  role_data:
    description: Role Contrail WebUI using composable services.
    value:
      service_name: contrail_webui
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail::webui::contrail_analytics_vip: {get_param: ContrailWebUiAnalyticsVip}
            contrail::webui::contrail_config_vip: {get_param: ContrailWebUiConfigVip}
            contrail::webui::contrail_webui_http_port: {get_param: ContrailWebuiHttpPort}
            contrail::webui::contrail_webui_https_port: {get_param: ContrailWebuiHttpsPort}
            contrail::webui::neutron_vip: {get_param: ContrailWebUiNeutronVip}
            contrail::webui::redis_ip: {get_param: ContrailWebUiRedisIp}
      step_config: |
        include ::tripleo::network::contrail::webui
